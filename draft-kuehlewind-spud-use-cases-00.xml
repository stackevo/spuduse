<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?> <!-- keep one blank line between list items -->
<rfc category="info" docName="draft-kuehlewind-spud-use-cases-00" ipr="trust200902">

 <front>

   <title>SPUD Use Cases</title>

   <author fullname="Mirja Kühlewind" initials="M.K."
           surname="Kühlewind">
     <organization>ETH Zurich</organization>
     <address>
       <postal>
         <city>Zurich</city>
         <country>Switzerland</country>
       </postal>
       <email>mirja.kuehlewind@tik.ee.ethz.ch</email>
     </address>
   </author>

   <date year="2015" />

   <area>Transport</area>

   <!--<workgroup>SPUD</workgroup>-->

   <!--<keyword>Middlebox, Transport</keyword>-->

   <abstract>
     <t></t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>Text</t>

     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref
       target="RFC2119">RFC 2119</xref>.</t>
     </section>
   </section>

   <section anchor="udp" title="UDP firewall traversal">
       <section title="Problem Statement">
           <t>Today UDP is often blocked by firewalls either completely or only enable for a few well-known application. However, this makes this hard to deploy new services on top of UDP.
               
            <t>For a long time UDP was not much used for high volume traffic and therefore most UDP traffic was assumed to be spam or attack traffic. This is not true anymore and the volume of (good) UDP traffic is growing due to mostly voice and video (real-time) services , e.g. RTCWEB uses UDP for data and media, where TCP is not suitable anyway.</t>
               
            <t>Even if firewall administrator are willing to implement new rules for UDP services, it is hard to establish session/flow state as it is not know if the receiver is willing to accept the connection and further how long state must be maintained when established once. Therefore we need an explicit contract to establish state along the path (as today’s implicit contract does with TCP).</t>
           </section>
           <section title="Information Exposure">
               <t>To maintain state in the network, it must be possible to easily assign each packet to a session that is passing a certain network node. This state must not be bounded to a five-tuple, therefore we propose the use of identifiers (“tubes”) beyond the five-tuple to link packets together. This allows for differential treatment of different packets within one 5-tuple flow (if the application has segmentation control and provides requirements on a per-packet base)</t>
               
               <t>Further to maintain state, the sender must indicate explicitly start and end of a tube to middlebox, while the receiver must confirm connection establishment. Therefore all SPUD connection must be bidirectional. Even though UDP is not a bidirectional transport protocol, often services on top of UDP are bidirectional anyway. Even if not, we only require one packet to acknowledge a new connection. This is low overhead for increased security. This connection set-up should not impose any additional start-up latency, there the sender must be able to send payload data in the first packet.</t>
               
               <t>If a firewall blocks a SPUD packet, it can be beneficial for the sender to know why the packet was blocked. Therefore a SPUD-aware middlebox must be able to send error messages. Such an error message can either be sent directly to the sender itself, or alternatively to the receiver that can decided to forward the error message to a sender or not.</t>
           </section>
           <section title="Mechanism">
               <t>A firewall or middlebox can use the tube ID as an identifier for its session state information. If the tube id is large enough it will be hard for a non-eavesdropping attacker to guess the ID.</t>
               
               <t>If a firewall receives a SPUD message that signals the start of a connection, it can decide to establish new state for this tube. Alternative it can also forward the packet to the receiver and wait if the connection is wanted before establishing state. To not requiring to forward unknown payload, firewall might want to forward the initial SPUD packet without payload and only send the full packet if the connection has be accepted by the receiver.</t>
               
               <t>The firewall must still maintain a timer to delete the state of a certain tube if no packets were received for a while. However, if a end signal is received the firewall can remove the state information faster.</t>
               
               <t>If a firewall receives a SPUD message which does not indicate the start of a new tube and no state is available for this tube, it may decide to block the traffic. This can happen if the state has already timed out or if the traffic was rerouted. In addition a firewall may send an error message to the sender or the receiver indication that not state information are available. If the sender receives such a message it can resend a start signal (potential together with other tube state information) and continue its transmission.</t>
           </section>
           <section title="Deployment Incentives">
               <t>It is not expected that the provided SPUD information will enable generic UDP-based services to pass firewall, however for new services that a firewall administrator is willing to allow to pass, it makes state handling easier.</t>
               
               <t>For application developers that actually would like to use a new transport services, there is today often only two choices; encapsulation over UDP or over TCP. SPUD already provides encapsulation over UDP as well as maintains (a few) additional information about the network state. This shim layer can support application developers to more easily implement new services.</t>
           </section>
           <section title="Trust and Privacy">
               <t>We proposed to limit the scope of the tube ID to the five-tuple. Therefore any information provided by SPUD cannot be used to further assign different flows to the same user. This limitation needs further discussion.</t>
               
               <t>By providing information on the connection start up, SPUD only exposed information that are often already given in the higher layer semantics. Thus it does not expose addition information, it only makes the information explicit and access without specific higher-layer/application-level knowledge.</t>
       </section>
     <t>text</t>
   </section>
       
    <section anchor="latency" title="Low-Latency Service">
        <t>text</t>
        <section title="Problem Statement">
        </section>
        <section title="Information Exposure">
            <t>explicit indication of loss- vs. latency-sensitive traffic: loss-sensitive traffic faces larger buffer delay,but lower loss rate (tradeoff)</t>
        </section>
        <section title="Mechanism">
            <t>latency-sensitive traffic could be managed in a different queue or with use of AQM such as PIE/ CoDel, but might see higher loss rates (no prioritization)</t>
            <t>provider decides about bandwidth sharing between both services, and might or might not expose this information</t>
        </section>
        <section title="Deployment Incentives">
        </section>
        <section title="Trust and Privacy">
        </section>
    </section>
   
    <section anchor="app-limit" title="Application-Limited Flows">
        <section title="Problem Statement">
        </section>
        <section title="Information Exposure">
            <t>e.g. explicit indication of data rate for CBR traffic: video traffic could provide maximum rate with current encoding; network could expose rate shaping to simplify probing; endhost/network could provide indication of sudden changes in bandwidth demand/offer</t>
        </section>
        <section title="Mechanism">
        </section>
        <section title="Deployment Incentives">
        </section>
        <section title="Trust and Privacy">
        </section>
    </section>
   

   
   <section anchor="mux" title="Service Multiplexing">
       <t>text</t>
       <section title="Problem Statement">
       </section>
       <section title="Information Exposure">
           <t>Explicit indication of relative flow priority, relative packet priority within a flow</t>
              
       </section>
       <section title="Mechanism">
           <t>e.g. if service has multiple simultaneous transmission of video/audio/control data, interactive data would be prioritized within same service</t>
           <t>e.g. more important packets such as I-frames in video could be prioritized within same flow/tube </t>
       </section>
       <section title="Deployment Incentives">
       </section>
       <section title="Trust and Privacy">
       </section>
   </section>
   
   <section anchor="mux" title="Network Monitoring">
       <t>text</t>
       <section title="Problem Statement">
       </section>
       <section title="Information Exposure">
           <t>Test bandwidth/delay? Error reports?</t>
       </section>
       <section title="Mechanism">
           <t></t>
       </section>
       <section title="Deployment Incentives">
       </section>
       <section title="Trust and Privacy">
       </section>
   </section>

   <section anchor="Acknowledgements" title="Acknowledgements">
     <t></t>
   </section>

   <section anchor="IANA" title="IANA Considerations">
     <t>This memo includes no request to IANA.</t>
   </section>

   <section anchor="Security" title="Security Considerations">
     <t>No security considerations.</t>
   </section>
 </middle>

 <back>

   <references title="Normative References">
     &RFC2119;

     <!--<reference anchor="min_ref">

       <front>
         <title>Minimal Reference</title>

         <author initials="authInitials" surname="authSurName">
           <organization></organization>
         </author>

         <date year="2015" />
       </front>
     </reference>-->
   </references>

   <references title="Informative References">

   </references>

   <!-- Change Log

v00 2015-05-07  MK   Initial version

  -->
 </back>
</rfc>
